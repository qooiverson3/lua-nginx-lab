user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    # include       /etc/nginx/mime.types;
    # default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    # sendfile        on;
    #tcp_nopush     on;
    keepalive_timeout  65;
    gzip  on;

    lua_shared_dict metrics 10M;
    lua_package_path "/usr/local/src/lua/5.1/?.lua;;";
    init_by_lua_block {
        require "resty.core"

        local metrics = ngx.shared.metrics
        if metrics then
            -- init ports metrics
            local ports = {80, 8080}  -- 根據需要列出所有您想要監控的埠
            for _, port in ipairs(ports) do
                metrics:set(port .. "_request_count", 0)
                metrics:set(port .. "_total_request_size", 0)
                metrics:set(port .. "_total_response_size", 0)
            end
        else
            ngx.log(ngx.ERR, "Failed to initialize metrics shared dictionary")
        end
    }

    server {
        listen 80;
        location / {
            access_by_lua_block {
                local metrics = ngx.shared.metrics
                if metrics then
                    local port = ngx.var.server_port

                    -- 計算請求數量
                    metrics:incr(port .. "_request_count", 1)

                    -- 記錄請求大小
                    local req_size = tonumber(ngx.var.request_length)
                    if req_size then
                        metrics:incr(port .. "_total_request_size", req_size)
                    end
                else
                    ngx.log(ngx.ERR, "Failed to access metrics shared dictionary in access_by_lua_block")
                end
            }

            log_by_lua_block {
                local metrics = ngx.shared.metrics
                if metrics then
                    local port = ngx.var.server_port

                    -- 記錄回應大小
                    local res_size = tonumber(ngx.var.bytes_sent)
                    if res_size then
                        metrics:incr(port .. "_total_response_size", res_size)
                    end
                else
                    ngx.log(ngx.ERR, "Failed to access metrics shared dictionary in log_by_lua_block")
                end
            }

            content_by_lua_block {
                local filename = "/etc/nginx/nginx.conf"
                local file = io.open(filename, "r")

                if not file then
                    ngx.say("Failed to open file: ", filename)
                    return
                end

                local content = file:read("*a")
                file:close()

                ngx.say(content)
            }
        }
    location /metrics {
        content_by_lua_block {
            local metrics = ngx.shared.metrics
            if metrics then
                local ports = {80, 8080}  -- all ports
                for _, port in ipairs(ports) do
                    local request_count = metrics:get(port .. "_request_count") or 0
                    local total_request_size = metrics:get(port .. "_total_request_size") or 0
                    local total_response_size = metrics:get(port .. "_total_response_size") or 0

                    ngx.say("Port ", port, " Metrics:")
                    ngx.say("request_count: ", request_count)
                    ngx.say("total_request_size: ", total_request_size)
                    ngx.say("total_response_size: ", total_response_size)
                    ngx.say("")
                end
            else
                ngx.say("Failed to access metrics shared dictionary")
            end
        }
    }
    }

    server {
        listen 8080;
        location / {
            access_by_lua_block {
                local metrics = ngx.shared.metrics
                if metrics then
                    local port = ngx.var.server_port

                    -- 計算請求數量
                    metrics:incr(port .. "_request_count", 1)

                    -- 記錄請求大小
                    local req_size = tonumber(ngx.var.request_length)
                    if req_size then
                        metrics:incr(port .. "_total_request_size", req_size)
                    end
                else
                    ngx.log(ngx.ERR, "Failed to access metrics shared dictionary in access_by_lua_block")
                end
            }

            log_by_lua_block {
                local metrics = ngx.shared.metrics
                if metrics then
                    local port = ngx.var.server_port

                    -- 記錄回應大小
                    local res_size = tonumber(ngx.var.bytes_sent)
                    if res_size then
                        metrics:incr(port .. "_total_response_size", res_size)
                    end
                else
                    ngx.log(ngx.ERR, "Failed to access metrics shared dictionary in log_by_lua_block")
                end
            }

            content_by_lua_block {
                ngx.say("serve by :8080")
            }
        }
    }
}
